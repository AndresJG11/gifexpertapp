{"version":3,"sources":["AddCategory.js","helpers/getGifs.js","GifGridItem.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","event","preventDefault","category","type","value","onChange","target","getGifts","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OACI,0BAAMC,SAPW,SAACC,GAClBA,EAAMC,iBAENN,GAAe,SAAAO,GAAQ,OAAKL,GAAL,mBAAoBK,SAKvC,2BACIC,KAAK,OACLC,MAASP,EACTQ,SAfS,SAACL,GAClBF,EAAcE,EAAMM,OAAOF,UAgBvB,6BACA,+C,uBCtBCG,EAAQ,uCAAG,WAAML,GAAN,uBAAAM,EAAA,6DACdC,EADc,0FAC2EC,UAAUR,GADrF,qBAEDS,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAACC,GAAS,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAYbM,GAZa,4CAAH,sDCARO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAKA,EAAL,OCDCO,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZN,mBAAS,CAC/BkB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNvB,EAASL,GACJ6B,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACzB,IAEG0B,EDbwBK,CAAa/B,GAArCyB,EAF4B,EAE5BA,QAAcP,EAFc,EAEnBN,KAEhB,OACI,oCACI,wBAAIS,UAAU,qCAAd,IAAoDrB,EAApD,KACEyB,GAAW,uCACb,yBAAKJ,UAAU,+CACVH,EAAOJ,KAAK,SAACC,EAAKC,GAAN,OAAa,kBAAC,EAAD,eAAagB,IAAKhB,GAAQD,UEIrDkB,EAfM,WAAO,IAAD,EAEavC,mBAAS,CAAC,QAFvB,mBAEhBwC,EAFgB,KAEJzC,EAFI,KAIvB,OAAO,oCACH,8CACA,6BACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,4BACMyC,EAAWpB,KAAK,SAACd,GAAD,OAAc,kBAAC,EAAD,CAASgC,IAAOhC,EAAUA,SAAYA,UCRlFmC,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,U","file":"static/js/main.27a3be7e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleChange = (event) => {\r\n        setinputValue(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setCategories( category => [inputValue, ...category] )\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = {handleChange}\r\n            /> \r\n            <br/>\r\n            <button > Agregar </button>\r\n        </form>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifts = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=4emLPzUVnW7yCuQZZYei1f2yP5LP3xxD&q=${encodeURI(category)}&limit=5`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map( (img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    } )\r\n    return(gifs)\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\n\r\n\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {loading, data:images} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"animate__animated animate__fadeIn\"> {category} </h1>\r\n            { loading && <p>Cargando</p>}\r\n           {<div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {images.map( (img, id) => <GifGridItem key={id} {...img} /> )}\r\n            </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifts } from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport {AddCategory} from './AddCategory'\r\nimport {GifGrid} from './GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['sky']);\r\n\r\n    return(<> \r\n        <h2> GifExpertApp </h2>\r\n        <hr />\r\n        <AddCategory setCategories = {setCategories}/>\r\n        <ol>\r\n            { categories.map( (category) => <GifGrid key = {category} category = {category} /> )}\r\n        </ol>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nReactDOM.render(<GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}